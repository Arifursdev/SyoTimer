{"version":3,"sources":["jquery.syotimer.js"],"names":["$","DAY","HOUR","MINUTE","SECOND","DAY_IN_SEC","HOUR_IN_SEC","MINUTE_IN_SEC","LAYOUT_TYPES","d","h","m","s","UNIT_LINKED_LIST","list","next","current","currentIndex","this","indexOf","length","prev","lang","rus","second","minute","hour","day","eng","DEFAULTS","year","month","timeZone","ignoreTransferTime","layout","periodic","periodInterval","periodUnit","dayVisible","doubleNumbers","effectType","headTitle","footTitle","afterDeadline","timerBlock","bodyBlock","html","ITEMS_HAS_OPTIONS","SyoTimer","init","settings","options","extend","itemTypes","staticMethod","getItemTypesByLayout","_itemsHas","i","each","elementBox","data","_render","apply","_perSecondHandler","timerItem","getTimerItem","headBlock","class","footBlock","itemBlocks","item","clone","addClass","append","timerBlocks","css","currentDate","Date","deadLineDate","differenceInMilliSec","getDifferenceWithTimezone","secondsToDeadLine","getSecondsToDeadLine","_refreshUnitsDom","_applyEffectSwitch","unitList","unitsToDeadLine","getUnitsToDeadLine","language","unit","unitValue","itemBlock","format2","definitionOfNumerals","element","setTimeout","unitItemBlock","nextUnit","animate","opacity","timerCellValue","text","timerCellUnit","timerCell","push","differenceInSeconds","Math","floor","additionalInUnit","differenceInUnit","periodUnitInSeconds","getPeriodUnit","fullTimeUnitsBetween","ceil","abs","unitInMilliSec","given_period_unit","amendment","differenceByLocalTimezone","getTime","amendmentOnTimezone","amendmentOnTransferTime","timezoneOffset","parseFloat","localTimezoneOffset","getTimezoneOffset","currentTimezoneOffset","deadLineTimezoneOffset","number","isUse","titles","index","cases","methods","setOption","name","value","hasOwnProperty","fn","syotimer","otherArgs","Array","prototype","slice","call","arguments","error","jQuery"],"mappings":"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","file":"jquery.syotimer.min.js","sourcesContent":["(function($){\n    var DAY = \"day\",\n        HOUR = \"hour\",\n        MINUTE = \"minute\",\n        SECOND = \"second\";\n    var DAY_IN_SEC = 24 * 60 * 60;\n    var HOUR_IN_SEC = 60 * 60;\n    var MINUTE_IN_SEC = 60;\n    var LAYOUT_TYPES = {\n            d: DAY,\n            h: HOUR,\n            m: MINUTE,\n            s: SECOND\n        };\n    var UNIT_LINKED_LIST = {\n            list: [SECOND, MINUTE, HOUR, DAY],\n            next: function(current) {\n                var currentIndex = this.list.indexOf(current);\n                return (currentIndex < this.list.length ) ? this.list[currentIndex + 1] : false;\n            },\n            prev: function(current) {\n                var currentIndex = this.list.indexOf(current);\n                return (currentIndex > 0 ) ? this.list[currentIndex - 1] : false;\n            }\n        };\n\n    var lang = {\n        rus: {\n            second: ['секунда', 'секунды', 'секунд'],\n            minute: ['минута', 'минуты', 'минут'],\n            hour: ['час', 'часа', 'часов'],\n            day: ['день', 'дня', 'дней']\n        },\n        eng: {\n            second: ['second', 'seconds'],\n            minute: ['minute', 'minutes'],\n            hour: ['hour', 'hours'],\n            day: ['day', 'days']\n        }\n    };\n\n    var DEFAULTS = {\n        year: 2014,\n        month: 7,\n        day: 31,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        timeZone: 'local',\n        ignoreTransferTime: false,\n        layout: 'dhms',\n\n        periodic: false, // true - таймер периодичный\n        periodInterval: 7, // (если periodic установлен как true) период таймера. Единица измерения указывается в periodType\n        periodUnit: 'd', // единица измерения периода таймера\n\n        dayVisible: true, // показывать ли количество дней, если нет, то количество часов может превышать 23\n        doubleNumbers: true, // показывать часы, минуты и секунды с ведущими нолями ( 2часа 5минут 4секунды = 02:05:04)\n        effectType: 'none', // эффект отсчета таймера: 'none' - нет эффекта, 'opacity' - выцветание\n        lang: 'eng',\n\n        headTitle: '', // текст над таймером (можно в HTML формате)\n        footTitle: '', // текст под таймером (можно в HTML формате)\n        afterDeadline: function(timerBlock){\n            timerBlock.bodyBlock.html('<p style=\"font-size: 1.2em;\">The countdown is finished!</p>');\n        }\n    };\n\n    var ITEMS_HAS_OPTIONS = {\n        second: false,\n        minute: false,\n        hour: false,\n        day: false\n    };\n\n    var SyoTimer = {\n        /**\n         * Init syotimer on DOM\n         * @param settings\n         * @returns {Array|Object|*}\n         */\n        init: function(settings) {\n            var options = $.extend({}, DEFAULTS, settings || {});\n            options.itemTypes = staticMethod.getItemTypesByLayout(options.layout);\n            options._itemsHas = $.extend({}, ITEMS_HAS_OPTIONS);\n            for (var i = 0; i < options.itemTypes.length; i++) {\n                options._itemsHas[options.itemTypes[i]] = true;\n            }\n            return this.each(function() {\n                var elementBox = $(this);\n                elementBox.data('syotimer-options', options);\n                SyoTimer._render.apply(this, []);\n                SyoTimer._perSecondHandler.apply(this, []);\n            });\n        },\n\n        /**\n         * Rendering base elements of countdown\n         * @private\n         */\n        _render: function() {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n\n            var timerItem = staticMethod.getTimerItem(),\n                headBlock = $('<div/>', {\"class\": 'syotimer__head'})\n                    .html(options.headTitle),\n                bodyBlock = $('<div/>', {\"class\": 'syotimer__body'}),\n                footBlock = $('<div/>', {\"class\": 'syotimer__footer'})\n                    .html(options.footTitle),\n                itemBlocks = {};\n\n            for (var i = 0; i < options.itemTypes.length; i++) {\n                var item = timerItem.clone();\n                item.addClass('syotimer-cell_type_' + options.itemTypes[i]);\n                bodyBlock.append(item);\n                itemBlocks[options.itemTypes[i]] = item;\n            }\n            var timerBlocks = {\n                    headBlock: headBlock,\n                    bodyBlock: bodyBlock,\n                    footBlock: footBlock\n                };\n            elementBox.data('syotimer-blocks', timerBlocks)\n                .data('syotimer-items', itemBlocks)\n                .addClass('syotimer')\n                .append(headBlock)\n                .append(bodyBlock)\n                .append(footBlock);\n        },\n\n        /**\n         * Handler called per seconds while countdown is not over\n         * @private\n         */\n        _perSecondHandler: function() {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n            $('.syotimer-cell > .syotimer-cell__value', elementBox).css( 'opacity', 1 );\n            var currentDate = new Date(),\n                deadLineDate = new Date(\n                    options.year,\n                    options.month - 1,\n                    options.day,\n                    options.hour,\n                    options.minute,\n                    options.second\n                ),\n                differenceInMilliSec = staticMethod.getDifferenceWithTimezone(currentDate, deadLineDate, options),\n                secondsToDeadLine = staticMethod.getSecondsToDeadLine(differenceInMilliSec, options);\n            if ( secondsToDeadLine >= 0 ) {\n                SyoTimer._refreshUnitsDom.apply(this, [secondsToDeadLine]);\n                SyoTimer._applyEffectSwitch.apply(this, [options.effectType]);\n            } else {\n                elementBox = $.extend(elementBox, elementBox.data('syotimer-blocks'));\n                options.afterDeadline( elementBox );\n            }\n        },\n\n        /**\n         * Refresh unit DOM of countdown\n         * @param secondsToDeadLine\n         * @private\n         */\n        _refreshUnitsDom: function(secondsToDeadLine) {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options'),\n                itemBlocks = elementBox.data('syotimer-items'),\n                unitList = options.itemTypes,\n                unitsToDeadLine = staticMethod.getUnitsToDeadLine( secondsToDeadLine ),\n                language = lang[options.lang];\n\n            if ( !options._itemsHas.day ) {\n                unitsToDeadLine.hour += unitsToDeadLine.day * 24;\n            }\n            if ( !options._itemsHas.hour ) {\n                unitsToDeadLine.minute += unitsToDeadLine.hour * 60;\n            }\n            if ( !options._itemsHas.minute ) {\n                unitsToDeadLine.second += unitsToDeadLine.minute * 60;\n            }\n            for(var i = 0; i < unitList.length; i++) {\n                var unit = unitList[i],\n                    unitValue = unitsToDeadLine[unit],\n                    itemBlock = itemBlocks[unit];\n                itemBlock.data('syotimer-unit-value', unitValue);\n                $('.syotimer-cell__value', itemBlock).html(staticMethod.format2(\n                    unitValue,\n                    (unit != DAY) ? options.doubleNumbers : false\n                ));\n                $('.syotimer-cell__unit', itemBlock).html(staticMethod.definitionOfNumerals(\n                    unitValue,\n                    language[unit],\n                    options.lang\n                ));\n            }\n        },\n\n        /**\n         * Applying effect of changing numbers\n         * @param effectType\n         * @param unit\n         * @private\n         */\n        _applyEffectSwitch: function(effectType, unit) {\n            unit = unit || SECOND;\n            var element = this,\n                elementBox = $(element);\n            if ( effectType === 'none' ) {\n                setTimeout(function () {\n                    SyoTimer._perSecondHandler.apply(element, []);\n                }, 1000);\n            } else if ( effectType === 'opacity' ) {\n                var itemBlocks = elementBox.data('syotimer-items'),\n                    unitItemBlock = itemBlocks[unit];\n                if (unitItemBlock) {\n                    var nextUnit = UNIT_LINKED_LIST.next(unit),\n                        unitValue = unitItemBlock.data('syotimer-unit-value');\n                    $('.syotimer-cell__value', unitItemBlock).animate(\n                        {opacity: 0.1},\n                        1000,\n                        'linear',\n                        function () {\n                            SyoTimer._perSecondHandler.apply(element, []);\n                        }\n                    );\n                    if (nextUnit && unitValue == 0) {\n                        SyoTimer._applyEffectSwitch.apply(element, [effectType, nextUnit]);\n                    }\n                }\n            }\n        }\n    };\n\n    var staticMethod = {\n        /**\n         * Return once cell DOM of countdown: day, hour, minute, second\n         * @returns {object}\n         */\n        getTimerItem: function() {\n            var timerCellValue = $('<div/>', {\n                    \"class\": 'syotimer-cell__value',\n                    \"text\": '0'\n                }),\n                timerCellUnit = $('<div/>', {\"class\": 'syotimer-cell__unit'}),\n                timerCell = $('<div/>', {\"class\": 'syotimer-cell'});\n            timerCell.append(timerCellValue)\n                .append(timerCellUnit);\n            return timerCell;\n        },\n\n        getItemTypesByLayout: function(layout) {\n            var itemTypes = [];\n            for (var i = 0; i < layout.length; i++) {\n                itemTypes.push(LAYOUT_TYPES[layout[i]]);\n            }\n            return itemTypes;\n        },\n\n        /**\n         * Getting count of seconds to deadline\n         * @param differenceInMilliSec\n         * @param options\n         * @returns {*}\n         */\n        getSecondsToDeadLine: function(differenceInMilliSec, options) {\n            var secondsToDeadLine,\n                differenceInSeconds = differenceInMilliSec / 1000;\n            differenceInSeconds = Math.floor( differenceInSeconds );\n            if ( options.periodic ) {\n                var additionalInUnit,\n                    differenceInUnit,\n                    periodUnitInSeconds = staticMethod.getPeriodUnit(options.periodUnit),\n                    fullTimeUnitsBetween = differenceInMilliSec / (periodUnitInSeconds * 1000);\n                fullTimeUnitsBetween = Math.ceil( fullTimeUnitsBetween );\n                fullTimeUnitsBetween = Math.abs( fullTimeUnitsBetween );\n                if ( differenceInSeconds >= 0 ) {\n                    differenceInUnit = fullTimeUnitsBetween % options.periodInterval;\n                    differenceInUnit = ( differenceInUnit == 0 )? options.periodInterval : differenceInUnit;\n                    differenceInUnit -= 1;\n                } else {\n                    differenceInUnit = options.periodInterval - fullTimeUnitsBetween % options.periodInterval;\n                }\n                additionalInUnit = differenceInSeconds % periodUnitInSeconds;\n\n                // fix когда дедлайн раньше текущей даты,\n                // возникает баг с неправильным расчетом интервала при different пропорциональной periodUnit\n                if ( ( additionalInUnit == 0 ) && ( differenceInSeconds < 0 ) ) {\n                    differenceInUnit--;\n                }\n                secondsToDeadLine = Math.abs( differenceInUnit * periodUnitInSeconds + additionalInUnit );\n            } else {\n                secondsToDeadLine = differenceInSeconds;\n            }\n            return secondsToDeadLine;\n        },\n\n        /**\n         * Getting count of units to deadline\n         * @param secondsToDeadLine\n         * @returns {{}}\n         */\n        getUnitsToDeadLine: function(secondsToDeadLine) {\n            var unit = DAY,\n                unitsToDeadLine = {};\n            do {\n                var unitInMilliSec = staticMethod.getPeriodUnit(unit);\n                unitsToDeadLine[unit] = Math.floor(secondsToDeadLine / unitInMilliSec);\n                secondsToDeadLine = secondsToDeadLine % unitInMilliSec;\n            } while (unit = UNIT_LINKED_LIST.prev(unit));\n            return unitsToDeadLine;\n        },\n\n        /**\n         * Determine a unit of period in milliseconds\n         * @param given_period_unit\n         * @returns {number}\n         */\n        getPeriodUnit: function(given_period_unit) {\n            switch (given_period_unit) {\n                case 'd':\n                case DAY:\n                    return DAY_IN_SEC;\n                case 'h':\n                case HOUR:\n                    return HOUR_IN_SEC;\n                case 'm':\n                case MINUTE:\n                    return MINUTE_IN_SEC;\n                case 's':\n                case SECOND:\n                    return 1;\n            }\n        },\n\n        getDifferenceWithTimezone: function(currentDate, deadLineDate, options) {\n            var differenceByLocalTimezone = deadLineDate.getTime() - currentDate.getTime(),\n                amendmentOnTimezone = 0,\n                amendmentOnTransferTime = 0,\n                amendment;\n            if ( options.timeZone !== 'local' ) {\n                var timezoneOffset = parseFloat(options.timeZone) * staticMethod.getPeriodUnit(HOUR),\n                    localTimezoneOffset = - currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE);\n                amendmentOnTimezone = (timezoneOffset - localTimezoneOffset) * 1000;\n            }\n            if ( options.ignoreTransferTime ) {\n                var currentTimezoneOffset = -currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE),\n                    deadLineTimezoneOffset = -deadLineDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE);\n                amendmentOnTransferTime = (currentTimezoneOffset - deadLineTimezoneOffset) * 1000;\n            }\n            amendment = amendmentOnTimezone + amendmentOnTransferTime;\n            return differenceByLocalTimezone - amendment;\n        },\n\n        /**\n         * Formation of numbers with leading zeros\n         * @param number\n         * @param isUse\n         * @returns {string}\n         */\n        format2: function(number, isUse) {\n            isUse = (isUse !== false);\n            return ( ( number <= 9 ) && isUse ) ? ( \"0\" + number ) : ( \"\" + number );\n        },\n\n        /**\n         * Getting the correct declension of words after numerals\n         * @param number\n         * @param titles\n         * @param lang\n         * @returns {*}\n         */\n        definitionOfNumerals: function(number, titles, lang) {\n            switch (lang) {\n                case 'rus':\n                    var cases = [2, 0, 1, 1, 1, 2],\n                        index;\n                    if ( number % 100 > 4 && number % 100 < 20 ) {\n                        index = 2;\n                    } else {\n                        index = cases[(number % 10 < 5) ? number % 10 : 5];\n                    }\n                    return titles[index];\n                case 'eng':\n                    return titles[ ( number == 1 ) ? 0 : 1 ];\n            }\n        }\n\n    };\n\n    var methods = {\n        setOption: function(name, value) {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n            if ( options.hasOwnProperty( name ) ) {\n                options[name] = value;\n                elementBox.data('syotimer-options', options);\n            }\n        }\n    };\n\n    $.fn.syotimer = function(options){\n        if ( typeof options == 'string' && ( options === \"setOption\" ) ) {\n            var otherArgs = Array.prototype.slice.call(arguments, 1);\n            return this.each(function() {\n                methods[options].apply( this, otherArgs );\n            });\n        } else if (options === null || typeof options == 'object'){\n            return SyoTimer.init.apply(this, [options]);\n        } else {\n            $.error('SyoTimer. Error in call methods: methods is not exist');\n        }\n    };\n})(jQuery);\n"],"sourceRoot":"/source/"}