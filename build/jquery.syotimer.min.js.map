{"version":3,"sources":["jquery.syotimer.js"],"names":["$","DAY_IN_SEC","HOUR_IN_SEC","MINUTE_IN_SEC","LAYOUT_TYPES","d","h","m","s","lang","rus","second","minute","hour","day","eng","DEFAULTS","year","month","timeZone","ignoreTransferTime","layout","periodic","periodInterval","periodUnit","dayVisible","doubleNumbers","effectType","headTitle","footTitle","afterDeadline","timerBlock","bodyBlock","html","ITEMS_HAS_OPTIONS","SyoTimer","init","settings","options","extend","itemTypes","staticMethod","getItemTypesByLayout","_itemsHas","i","length","this","each","elementBox","data","_render","apply","_perSecondHandler","headBlock","footBlock","timerItem","getTimerItem","itemBlocks","addClass","append","item","clone","timerBlocks","css","currentDate","Date","deadLineDate","differenceInMilliSec","getDifferenceWithTimezone","secondsToDeadLine","getSecondsToDeadLine","_refreshUnitsDom","_applyEffectSwitch","unitList","unitsToDeadLine","getUnitsToDeadLine","language","unit","format2","definitionOfNumerals","element","setTimeout","animate","opacity","timerCellValue","timerCellUnit","timerCell","push","differenceInSeconds","Math","floor","additionalInUnit","differenceInUnit","periodUnitInSeconds","getPeriodUnit","fullTimeUnitsBetween","ceil","abs","unitInMilliSec","given_period_unit","amendment","differenceByLocalTimezone","getTime","amendmentOnTimezone","amendmentOnTransferTime","timezoneOffset","parseFloat","localTimezoneOffset","getTimezoneOffset","currentTimezoneOffset","deadLineTimezoneOffset","number","isUse","titles","index","cases","methods","setOption","name","value","hasOwnProperty","fn","syotimer","otherArgs","Array","prototype","slice","call","arguments","error","jQuery"],"mappings":"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","file":"jquery.syotimer.min.js","sourcesContent":["(function($){\n    var DAY_IN_SEC = 24 * 60 * 60;\n    var HOUR_IN_SEC = 60 * 60;\n    var MINUTE_IN_SEC = 60;\n    var LAYOUT_TYPES = {\n        d: \"day\",\n        h: \"hour\",\n        m: \"minute\",\n        s: \"second\"\n    };\n\n    var lang = {\n        rus: {\n            second: ['секунда', 'секунды', 'секунд'],\n            minute: ['минута', 'минуты', 'минут'],\n            hour: ['час', 'часа', 'часов'],\n            day: ['день', 'дня', 'дней']\n        },\n        eng: {\n            second: ['second', 'seconds'],\n            minute: ['minute', 'minutes'],\n            hour: ['hour', 'hours'],\n            day: ['day', 'days']\n        }\n    };\n\n    var DEFAULTS = {\n        year: 2014,\n        month: 7,\n        day: 31,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        timeZone: 'local',\n        ignoreTransferTime: false,\n        layout: 'dhms',\n\n        periodic: false, // true - таймер периодичный\n        periodInterval: 7, // (если periodic установлен как true) период таймера. Единица измерения указывается в periodType\n        periodUnit: 'd', // единица измерения периода таймера\n\n        dayVisible: true, // показывать ли количество дней, если нет, то количество часов может превышать 23\n        doubleNumbers: true, // показывать часы, минуты и секунды с ведущими нолями ( 2часа 5минут 4секунды = 02:05:04)\n        effectType: 'none', // эффект отсчета таймера: 'none' - нет эффекта, 'opacity' - выцветание\n        lang: 'eng',\n\n        headTitle: '', // текст над таймером (можно в HTML формате)\n        footTitle: '', // текст под таймером (можно в HTML формате)\n        afterDeadline: function(timerBlock){\n            timerBlock.bodyBlock.html('<p style=\"font-size: 1.2em;\">The countdown is finished!</p>');\n        }\n    };\n\n    var ITEMS_HAS_OPTIONS = {\n        second: false,\n        minute: false,\n        hour: false,\n        day: false\n    };\n\n    var SyoTimer = {\n        /**\n         * Init syotimer on DOM\n         * @param settings\n         * @returns {Array|Object|*}\n         */\n        init: function(settings) {\n            var options = $.extend({}, DEFAULTS, settings || {});\n            options.itemTypes = staticMethod.getItemTypesByLayout(options.layout);\n            options._itemsHas = $.extend({}, ITEMS_HAS_OPTIONS, settings || {});\n            for (var i = 0; i < options.itemTypes.length; i++) {\n                options._itemsHas[options.itemTypes[i]] = true;\n            }\n            return this.each(function() {\n                var elementBox = $(this);\n                elementBox.data('syotimer-options', options);\n                SyoTimer._render.apply(this, []);\n                SyoTimer._perSecondHandler.apply(this, []);\n            });\n        },\n\n        /**\n         * Rendering base elements of countdown\n         * @private\n         */\n        _render: function() {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n\n            var timerItem = staticMethod.getTimerItem(),\n                headBlock,\n                bodyBlock,\n                footBlock,\n                itemBlocks = {};\n            headBlock = $('<div/>').addClass('syotimer__head')\n                    .append(options.headTitle);\n            footBlock = $('<div/>').addClass('syotimer__footer')\n                    .append(options.headTitle);\n            bodyBlock = $('<div/>').addClass('syotimer__body');\n\n            for (var i = 0; i < options.itemTypes.length; i++) {\n                var item = timerItem.clone();\n                item.addClass('syotimer-cell_' + options.itemTypes[i]);\n                bodyBlock.append(item);\n                itemBlocks[options.itemTypes[i]] = item;\n            }\n            var timerBlocks = {\n                    headBlock: headBlock,\n                    bodyBlock: bodyBlock,\n                    footBlock: footBlock\n                };\n            elementBox.data('syotimer-blocks', timerBlocks)\n                .data('syotimer-items', itemBlocks)\n                .addClass('syotimer')\n                .append(headBlock)\n                .append(bodyBlock)\n                .append(footBlock);\n        },\n\n        /**\n         * Handler called per seconds while countdown is not over\n         * @private\n         */\n        _perSecondHandler: function() {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n            $('.syotimer-cell_second > .syotimer-cell__value', elementBox).css( 'opacity', 1 );\n            var currentDate = new Date(),\n                deadLineDate = new Date(\n                    options.year,\n                    options.month - 1,\n                    options.day,\n                    options.hour,\n                    options.minute,\n                    options.second\n                ),\n                differenceInMilliSec = staticMethod.getDifferenceWithTimezone(currentDate, deadLineDate, options),\n                secondsToDeadLine = staticMethod.getSecondsToDeadLine(differenceInMilliSec, options);\n            if ( secondsToDeadLine >= 0 ) {\n                SyoTimer._refreshUnitsDom.apply(this, [secondsToDeadLine]);\n                SyoTimer._applyEffectSwitch.apply(this, [options.effectType]);\n            } else {\n                elementBox = $.extend(elementBox, elementBox.data('syotimer-blocks'));\n                options.afterDeadline( elementBox );\n            }\n        },\n\n        /**\n         * Refresh unit DOM of countdown\n         * @param secondsToDeadLine\n         * @private\n         */\n        _refreshUnitsDom: function(secondsToDeadLine) {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options'),\n                itemBlocks = elementBox.data('syotimer-items'),\n                unitList = options.itemTypes,\n                unitsToDeadLine = staticMethod.getUnitsToDeadLine( secondsToDeadLine ),\n                language = lang[options.lang];\n\n            if ( !options._itemsHas.day ) {\n                unitsToDeadLine.hour += unitsToDeadLine.day * 24;\n            }\n            if ( !options._itemsHas.hour ) {\n                unitsToDeadLine.minute += unitsToDeadLine.hour * 60;\n            }\n            if ( !options._itemsHas.minute ) {\n                unitsToDeadLine.second += unitsToDeadLine.minute * 60;\n            }\n            for(var i = 0; i < unitList.length; i++) {\n                var unit = unitList[i];\n                $('.syotimer-cell__value', itemBlocks[unit]).html(staticMethod.format2(\n                    unitsToDeadLine[unit],\n                    (unit != 'day') ? options.doubleNumbers : false\n                ));\n                $('.syotimer-cell__unit', itemBlocks[unit]).html(staticMethod.definitionOfNumerals(\n                    unitsToDeadLine[unit],\n                    language[unit],\n                    options.lang\n                ));\n            }\n        },\n\n        /**\n         * Applying effect of changing numbers\n         * @param effectType\n         * @private\n         */\n        _applyEffectSwitch: function(effectType) {\n            var element = this,\n                elementBox = $(element);\n            switch ( effectType ){\n                case 'none':\n                    setTimeout( function(){\n                        SyoTimer._perSecondHandler.apply(element, []);\n                    }, 1000);\n                    break;\n                case 'opacity':\n                    $('.syotimer-cell_second > .syotimer-cell__value', elementBox).animate(\n                        {opacity: 0.1 },\n                        1000,\n                        'linear',\n                        function() {\n                            SyoTimer._perSecondHandler.apply(element, []);\n                        }\n                    );\n                    break;\n            }\n        }\n    };\n\n    var staticMethod = {\n        /**\n         * Return once cell DOM of countdown: day, hour, minute, second\n         * @returns {object}\n         */\n        getTimerItem: function() {\n            var timerCellValue = $('<div/>').addClass('syotimer-cell__value')\n                    .html('0'),\n                timerCellUnit = $('<div/>').addClass('syotimer-cell__unit'),\n                timerCell = $('<div/>').addClass('syotimer-cell');\n            timerCell.append(timerCellValue)\n                .append(timerCellUnit);\n            return timerCell;\n        },\n\n        getItemTypesByLayout: function(layout) {\n            var itemTypes = [];\n            for (var i = 0; i < layout.length; i++) {\n                itemTypes.push(LAYOUT_TYPES[layout[i]]);\n            }\n            return itemTypes;\n        },\n\n        /**\n         * Getting count of seconds to deadline\n         * @param differenceInMilliSec\n         * @param options\n         * @returns {*}\n         */\n        getSecondsToDeadLine: function(differenceInMilliSec, options) {\n            var secondsToDeadLine,\n                differenceInSeconds = differenceInMilliSec / 1000;\n            differenceInSeconds = Math.floor( differenceInSeconds );\n            if ( options.periodic ) {\n                var additionalInUnit,\n                    differenceInUnit,\n                    periodUnitInSeconds = staticMethod.getPeriodUnit(options.periodUnit),\n                    fullTimeUnitsBetween = differenceInMilliSec / (periodUnitInSeconds * 1000);\n                fullTimeUnitsBetween = Math.ceil( fullTimeUnitsBetween );\n                fullTimeUnitsBetween = Math.abs( fullTimeUnitsBetween );\n                if ( differenceInSeconds >= 0 ) {\n                    differenceInUnit = fullTimeUnitsBetween % options.periodInterval;\n                    differenceInUnit = ( differenceInUnit == 0 )? options.periodInterval : differenceInUnit;\n                    differenceInUnit -= 1;\n                } else {\n                    differenceInUnit = options.periodInterval - fullTimeUnitsBetween % options.periodInterval;\n                }\n                additionalInUnit = differenceInSeconds % periodUnitInSeconds;\n\n                // fix когда дедлайн раньше текущей даты,\n                // возникает баг с неправильным расчетом интервала при different пропорциональной periodUnit\n                if ( ( additionalInUnit == 0 ) && ( differenceInSeconds < 0 ) ) {\n                    differenceInUnit--;\n                }\n                secondsToDeadLine = Math.abs( differenceInUnit * periodUnitInSeconds + additionalInUnit );\n            } else {\n                secondsToDeadLine = differenceInSeconds;\n            }\n            return secondsToDeadLine;\n        },\n\n        /**\n         * Getting count of units to deadline\n         * @param secondsToDeadLine\n         * @returns {{}}\n         */\n        getUnitsToDeadLine: function(secondsToDeadLine) {\n            var unitList = ['day', 'hour', 'minute', 'second'],\n                unitsToDeadLine = {};\n            for (var i = 0; i < unitList.length; i++) {\n                var unit = unitList[i],\n                    unitInMilliSec = staticMethod.getPeriodUnit(unit);\n                unitsToDeadLine[unit] = Math.floor(secondsToDeadLine / unitInMilliSec);\n                secondsToDeadLine = secondsToDeadLine % unitInMilliSec;\n            }\n            return unitsToDeadLine;\n        },\n\n        /**\n         * Determine a unit of period in milliseconds\n         * @param given_period_unit\n         * @returns {number}\n         */\n        getPeriodUnit: function(given_period_unit) {\n            switch (given_period_unit) {\n                case 'd':\n                case 'day':\n                    return DAY_IN_SEC;\n                case 'h':\n                case 'hour':\n                    return HOUR_IN_SEC;\n                case 'm':\n                case 'minute':\n                    return MINUTE_IN_SEC;\n                case 's':\n                case 'second':\n                    return 1;\n            }\n        },\n\n        getDifferenceWithTimezone: function(currentDate, deadLineDate, options) {\n            var differenceByLocalTimezone = deadLineDate.getTime() - currentDate.getTime(),\n                amendmentOnTimezone = 0,\n                amendmentOnTransferTime = 0,\n                amendment;\n            if ( options.timeZone !== 'local' ) {\n                var timezoneOffset = parseFloat(options.timeZone) * staticMethod.getPeriodUnit('hour'),\n                    localTimezoneOffset = - currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit('minute');\n                amendmentOnTimezone = (timezoneOffset - localTimezoneOffset) * 1000;\n            }\n            if ( options.ignoreTransferTime ) {\n                var currentTimezoneOffset = -currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit('minute'),\n                    deadLineTimezoneOffset = -deadLineDate.getTimezoneOffset() * staticMethod.getPeriodUnit('minute');\n                amendmentOnTransferTime = (currentTimezoneOffset - deadLineTimezoneOffset) * 1000;\n            }\n            amendment = amendmentOnTimezone + amendmentOnTransferTime;\n            return differenceByLocalTimezone - amendment;\n        },\n\n        /**\n         * Formation of numbers with leading zeros\n         * @param number\n         * @param isUse\n         * @returns {string}\n         */\n        format2: function(number, isUse) {\n            isUse = (isUse !== false);\n            return ( ( number <= 9 ) && isUse ) ? ( \"0\" + number ) : ( \"\" + number );\n        },\n\n        /**\n         * Getting the correct declension of words after numerals\n         * @param number\n         * @param titles\n         * @param lang\n         * @returns {*}\n         */\n        definitionOfNumerals: function(number, titles, lang) {\n            switch (lang) {\n                case 'rus':\n                    var cases = [2, 0, 1, 1, 1, 2],\n                        index;\n                    if ( number % 100 > 4 && number % 100 < 20 ) {\n                        index = 2;\n                    } else {\n                        index = cases[(number % 10 < 5) ? number % 10 : 5];\n                    }\n                    return titles[index];\n                case 'eng':\n                    return titles[ ( number == 1 ) ? 0 : 1 ];\n            }\n        }\n\n    };\n\n    var methods = {\n        setOption: function(name, value) {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n            if ( options.hasOwnProperty( name ) ) {\n                options[name] = value;\n                elementBox.data('syotimer-options', options);\n            }\n        }\n    };\n\n    $.fn.syotimer = function(options){\n        if ( typeof options == 'string' && ( options === \"setOption\" ) ) {\n            var otherArgs = Array.prototype.slice.call(arguments, 1);\n            return this.each(function() {\n                methods[options].apply( this, otherArgs );\n            });\n        } else if (options === null || typeof options == 'object'){\n            return SyoTimer.init.apply(this, [options]);\n        } else {\n            $.error('SyoTimer. Error in call methods: methods is not exist');\n        }\n    };\n})(jQuery);\n"]}